>>> import re
>>> re.match("t", "tiger")
<_sre.SRE_Match object; span=(0, 1), match='t'>
>>> match = re.match("t", "tiger")
>>> match.start() 
0
>>> match.end()
1
>>> match.group(0)
't'
>>> m= re.fullmatch("tiger", "tiger")
>>> m.start(), m.end(), m.group(0)
(0, 5, 'tiger')
>>> m = re.match("\w+", "Ti.ger")
>>> m
<_sre.SRE_Match object; span=(0, 2), match='Ti'>
>>> m.start(), m.end(), m.group(0)
(0, 2, 'Ti')
>>> m = re.fullmatch("\w+", "Ti.ger")
>>> m
>>> m.start(), m.end(), m.group(0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'NoneType' object has no attribute 'start'
>>> m = re.fullmatch("(\w+)\.(\w+)", "Ti.ger")
>>> m.start(), m.end(), m.group(0), m.group(1), m.group(2)
(0, 6, 'Ti.ger', 'Ti', 'ger')
>>> m = re.fullmatch("\w+", "Ti.ger")
>>> m.start(), m.end(), m.group(0), m.group(1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'NoneType' object has no attribute 'start'
>>> m = re.fullmatch("(\w+)\.(\w+)", "Ti.ger")
>>> m.start(), m.end(), m.group(0), m.group(1), m.group(2)
(0, 6, 'Ti.ger', 'Ti', 'ger')
>>> m = re.match("\w+", "Ti.ger")
>>> m.start(), m.end(), m.group(0)
(0, 2, 'Ti')


>>> m = re.match("(\w+)\.(\w+)", "pushparaj$Ti.ger")
>>> m.start(), m.end(), m.group(0), m.group(1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'NoneType' object has no attribute 'start'
>>> m = re.search("(\w+)\.(\w+)", "pushparaj$Ti.ger")
>>> m.start(), m.end(), m.group(0), m.group(1), m.group(2)
(10, 16, 'Ti.ger', 'Ti', 'ger')


>>> m = re.search("(\w+)\.(\w+)", "pushparaj$Ti.ger$Li.on")
>>> m.start(), m.end(), m.group(0), m.group(1), m.group(2)
(10, 16, 'Ti.ger', 'Ti', 'ger')
>>> m = re.search("(\w+)\.(\w+)", "pushparaj$Ti.ger$Li.on"[-6:])
>>> m.start(), m.end(), m.group(0), m.group(1), m.group(2)
(1, 6, 'Li.on', 'Li', 'on')


>>> m = re.findall("(\w+)\.(\w+)", "pushparaj$Ti.ger$Li.on"[-6:])
>>> m
[('Li', 'on')]
>>> m = re.findall("(\w+)\.(\w+)", "pushparaj$Ti.ger$Li.on")
>>> m
[('Ti', 'ger'), ('Li', 'on')]
>>> match_iterator = re.finditer("(\w+)\.(\w+)", "pushparaj$Ti.ger$Li.on")
>>> for match in match_iterator:
...     match.start(), match.end(), match.group(0), match.group(1), match.group(2)
... 
(10, 16, 'Ti.ger', 'Ti', 'ger')
(17, 22, 'Li.on', 'Li', 'on')


>>> match_iterator = re.finditer("(\w+)\@(\w+)\.(\w+)", "kumbharkar.pushparaj@gmail.com")
>>> for match in match_iterator:
...     match.start(), match.end(), match.group(0), match.group(1), match.group(2), match.group(3)
... 
(11, 30, 'pushparaj@gmail.com', 'pushparaj', 'gmail', 'com')
>>> match_iterator = re.finditer("(\w+)\@(\w+)\.(\w+)", "kumbharkar.pushparaj@gmail.com pushparaj@gmail.com pushparaj@gmail")
>>> for match in match_iterator:
...     match.start(), match.end(), match.group(0), match.group(1), match.group(2), match.group(3)
... 
(11, 30, 'pushparaj@gmail.com', 'pushparaj', 'gmail', 'com')
(31, 50, 'pushparaj@gmail.com', 'pushparaj', 'gmail', 'com')

>>> match_iterator = re.finditer("(\w+)\.(\w+)\@(\w+)\.(\w+)", "kumbharkar.pushparaj@gmail.com pushparaj@gmail.com pushparaj@gmail")
>>> for match in match_iterator:
...     match.start(), match.end(), match.group(0), match.group(1), match.group(2), match.group(3)
... 
(0, 30, 'kumbharkar.pushparaj@gmail.com', 'kumbharkar', 'pushparaj', 'gmail')


>>> match_iterator = re.finditer("(\w+.\w+)\@(\w+)\.(\w+)", "kumbharkar.pushparaj@gmail.com pushparaj@gmail.com pushparaj@gmail")
>>> for match in match_iterator:
...     match.start(), match.end(), match.group(0), match.group(1), match.group(2), match.group(3)
... 
(0, 30, 'kumbharkar.pushparaj@gmail.com', 'kumbharkar.pushparaj', 'gmail', 'com')
(31, 50, 'pushparaj@gmail.com', 'pushparaj', 'gmail', 'com')
>>> regex_obj = re.compile("(\w+).(\w+)")
>>> regex_obj.match("Ti.ger")
<_sre.SRE_Match object; span=(0, 6), match='Ti.ger'>
>>> regex_obj.match("Li.on")
<_sre.SRE_Match object; span=(0, 5), match='Li.on'>


>>> re.sub("\w+\.\w+", "hello", "Ti.ger Li.on pushparaj")
'hello hello pushparaj'
>>> re.subn("\w+\.\w+", "hello", "Ti.ger Li.on pushparaj")
('hello hello pushparaj', 2)
>>> re.subn("\w+\.\w+", "hello", "Ti.ger Li.on pushparaj",1)
('hello Li.on pushparaj', 1)


>>> re.split("@", "pushp@gmail.com")
['pushp', 'gmail.com']

*****************************
Special characters
*****************************

>>> re.search("a.b", "a*b")
<_sre.SRE_Match object; span=(0, 3), match='a*b'>
>>> re.search("a.b", "a~b")
<_sre.SRE_Match object; span=(0, 3), match='a~b'>
>>> re.search("a.b", "ab")
>>> re.search("a.b", "abb")
<_sre.SRE_Match object; span=(0, 3), match='abb'>
>>> re.search("a.b", "a b")
<_sre.SRE_Match object; span=(0, 3), match='a b'>

>>> re.search("^a.b", "a*b")
<_sre.SRE_Match object; span=(0, 3), match='a*b'>
>>> re.search("^a.b", "a~b")
<_sre.SRE_Match object; span=(0, 3), match='a~b'>
>>> re.search("^a.b", "ab")
>>> re.search("^a.b", "a b")
<_sre.SRE_Match object; span=(0, 3), match='a b'>

<_sre.SRE_Match object; span=(0, 3), match='a b'>
>>> re.search("a.b", "kadfkjgasa~b")
<_sre.SRE_Match object; span=(9, 12), match='a~b'>
>>> re.search("^a.b", "kadfkjgasa~b")
##### dont return anything as it searches at start

>>> re.search("a.b$", "kadfkjgasa~b")
<_sre.SRE_Match object; span=(9, 12), match='a~b'>
>>> re.search("a.b$", "kadfa~bkjgas")
##### dont return anything as it searches at end

>>> for match in re.finditer('a*','babababababaaabbaaab'):
...     print(match)
... 
<_sre.SRE_Match object; span=(0, 0), match=''>
<_sre.SRE_Match object; span=(1, 2), match='a'>
<_sre.SRE_Match object; span=(2, 2), match=''>
<_sre.SRE_Match object; span=(3, 4), match='a'>
<_sre.SRE_Match object; span=(4, 4), match=''>
<_sre.SRE_Match object; span=(5, 6), match='a'>
<_sre.SRE_Match object; span=(6, 6), match=''>
<_sre.SRE_Match object; span=(7, 8), match='a'>
<_sre.SRE_Match object; span=(8, 8), match=''>
<_sre.SRE_Match object; span=(9, 10), match='a'>
<_sre.SRE_Match object; span=(10, 10), match=''>
<_sre.SRE_Match object; span=(11, 14), match='aaa'>
<_sre.SRE_Match object; span=(14, 14), match=''>
<_sre.SRE_Match object; span=(15, 15), match=''>
<_sre.SRE_Match object; span=(16, 19), match='aaa'>
<_sre.SRE_Match object; span=(19, 19), match=''>
<_sre.SRE_Match object; span=(20, 20), match=''>

>>> for match in re.finditer('a+','bababaaaabbaaab'):
...     print(match)
... 
<_sre.SRE_Match object; span=(1, 2), match='a'>
<_sre.SRE_Match object; span=(3, 4), match='a'>
<_sre.SRE_Match object; span=(5, 9), match='aaaa'>
<_sre.SRE_Match object; span=(11, 14), match='aaa'>

>>> for match in re.finditer('a+?','bababaaaabbaaab'):
...     print(match)
... 
<_sre.SRE_Match object; span=(1, 2), match='a'>
<_sre.SRE_Match object; span=(3, 4), match='a'>
<_sre.SRE_Match object; span=(5, 6), match='a'>
<_sre.SRE_Match object; span=(6, 7), match='a'>
<_sre.SRE_Match object; span=(7, 8), match='a'>
<_sre.SRE_Match object; span=(8, 9), match='a'>
<_sre.SRE_Match object; span=(11, 12), match='a'>
<_sre.SRE_Match object; span=(12, 13), match='a'>
<_sre.SRE_Match object; span=(13, 14), match='a'>

>>> for match in re.finditer('a.','bababaaaabbaaab'):
...     print(match)
... 
<_sre.SRE_Match object; span=(1, 3), match='ab'>
<_sre.SRE_Match object; span=(3, 5), match='ab'>
<_sre.SRE_Match object; span=(5, 7), match='aa'>
<_sre.SRE_Match object; span=(7, 9), match='aa'>
<_sre.SRE_Match object; span=(11, 13), match='aa'>
<_sre.SRE_Match object; span=(13, 15), match='ab'>

>>> for match in re.finditer('a*?','bababaaaab'):
...     print(match)
... 
<_sre.SRE_Match object; span=(0, 0), match=''>
<_sre.SRE_Match object; span=(1, 1), match=''>
<_sre.SRE_Match object; span=(2, 2), match=''>
<_sre.SRE_Match object; span=(3, 3), match=''>
<_sre.SRE_Match object; span=(4, 4), match=''>
<_sre.SRE_Match object; span=(5, 5), match=''>
<_sre.SRE_Match object; span=(6, 6), match=''>
<_sre.SRE_Match object; span=(7, 7), match=''>
<_sre.SRE_Match object; span=(8, 8), match=''>
<_sre.SRE_Match object; span=(9, 9), match=''>
<_sre.SRE_Match object; span=(10, 10), match=''>

>>> for match in re.finditer('a{1,3}','bababaaaab'):
...     print(match)
... 
<_sre.SRE_Match object; span=(1, 2), match='a'>
<_sre.SRE_Match object; span=(3, 4), match='a'>
<_sre.SRE_Match object; span=(5, 8), match='aaa'>
<_sre.SRE_Match object; span=(8, 9), match='a'>
>>> for match in re.finditer('a{1,4}','bababaaaab'):
...     print(match)
... 
<_sre.SRE_Match object; span=(1, 2), match='a'>
<_sre.SRE_Match object; span=(3, 4), match='a'>
<_sre.SRE_Match object; span=(5, 9), match='aaaa'>

>>> for match in re.finditer('a{1,3}?','bababaaaab'):
...     print(match)
... 
<_sre.SRE_Match object; span=(1, 2), match='a'>
<_sre.SRE_Match object; span=(3, 4), match='a'>
<_sre.SRE_Match object; span=(5, 6), match='a'>
<_sre.SRE_Match object; span=(6, 7), match='a'>
<_sre.SRE_Match object; span=(7, 8), match='a'>
<_sre.SRE_Match object; span=(8, 9), match='a'>

>>> for match in re.finditer('a[0-9]','baba1baa4aa3b'):
...     print(match)
... 
<_sre.SRE_Match object; span=(3, 5), match='a1'>
<_sre.SRE_Match object; span=(7, 9), match='a4'>
<_sre.SRE_Match object; span=(10, 12), match='a3'>

>>> for match in re.finditer('a[12]','baba1ba2a4aa3b'):
...     print(match)
... 
<_sre.SRE_Match object; span=(3, 5), match='a1'>
<_sre.SRE_Match object; span=(6, 8), match='a2'>
>>> for match in re.finditer('a[12]','baba1ba2a4aa12b'):
...     print(match)
... 
<_sre.SRE_Match object; span=(3, 5), match='a1'>
<_sre.SRE_Match object; span=(6, 8), match='a2'>
<_sre.SRE_Match object; span=(11, 13), match='a1'>

>>> for match in re.finditer('a[1][2]','baba1ba2a4aa12b'):
...     print(match)
... 
<_sre.SRE_Match object; span=(11, 14), match='a12'>

>>> for match in re.finditer('a[a-zA-Z0-9]','baba1ba2a4aa12b'):
...     print(match)
... 
<_sre.SRE_Match object; span=(1, 3), match='ab'>
<_sre.SRE_Match object; span=(3, 5), match='a1'>
<_sre.SRE_Match object; span=(6, 8), match='a2'>
<_sre.SRE_Match object; span=(8, 10), match='a4'>
<_sre.SRE_Match object; span=(10, 12), match='aa'>

>>> for match in re.finditer('[^a-zA-Z0-9]+','baba1ba2$@%$a4aa12b'):
...     print(match)
... 
<_sre.SRE_Match object; span=(8, 12), match='$@%$'>
##### ^ here is used as negation which will display string not containing 'a-zA-Z0-9' (given RE).

>>> for match in re.finditer('a|b','baba1baa'):
...     print(match)
... 
<_sre.SRE_Match object; span=(0, 1), match='b'>
<_sre.SRE_Match object; span=(1, 2), match='a'>
<_sre.SRE_Match object; span=(2, 3), match='b'>
<_sre.SRE_Match object; span=(3, 4), match='a'>
<_sre.SRE_Match object; span=(5, 6), match='b'>
<_sre.SRE_Match object; span=(6, 7), match='a'>
<_sre.SRE_Match object; span=(7, 8), match='a'>


Read next slide - special sequences