1.
1
1 2 3
1 2 3 4
1 2 3
1 2
1

2.
1 2
2 4 8
3 6 12 24
4 8 16 32 64

3.
1 2
2 4 6
3 6 9 12
4 8 12 16 20

4.
4 3 2 1 *
3 2 1 * *
2 1 * * *
1 * * * *
* * * * *

5. wap to chk number is multiple of 512 or not without using arithmetic operator
6. wap to accept any 2's power and print it's table upto 10 in binary.
7. wap to prog to accept a number from user and count 0 bits from it (count number of 1 bits and subtract it from 32 bits)
8. wap to accept 2 numbers from user, accept number of bits and bit position swap corresponding bits of both the numbers.. 
(eg. 01001100,  01101101 
	number of bits 3 position 3 
	   01101100,  01001101)
hint::: 
	get x part and y part (using anding)
	turnoff espective bits from both numbers (anding with ~ number )
	x | y part  ,,, y | x part